row.names=1, stringsAsFactors = F, numerals="warn.loss", fill = T)
gene_length_df = read.table("../../../nmix_data_files/gtex_data/protCoding_GTEx_hg19_meanLength.txt", row.names = 1, header = FALSE)
dat <- log(dat)
sublibdat <- dat[,sample(seq(ncol(dat)), 2, replace = F)]
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[1:8000,1:8], gene_length = gene_length_df[1:8000,1], candidate_gene_list = "random",
output_directory = "testing_3july2019", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=4000, append = F)
mm$mcmc(sample_frequency = 20, progress_plot = F, write_to_files = T, ngen=12000, append = F,
run_posterior_predictive = T, mcmcprefix = "kidney")
kidneydat = dat
kidneydat[which(kidneydat == -Inf, arr.ind = T)] = -7
kidneydatp = read.table("testing_3july2019/kidney_mcmc_output/kidney_probability_active.tab", header = T, row.names = 1)
plot(kidneydatp$prob_active, liverp$prob_active)
layout(1)
plot(kidneydatp$prob_active, liverp$prob_active, cex =0.2)
dp = kidneyp$prob_active - liverp$prob_active
dp = kidneydatp$prob_active - liverp$prob_active
for(i in which(dp  >0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
for(j in 1:8){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue")}}
for(i in which(dp  >0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:8){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue")}}
lungp[which(row.names(lungp) == "ENSG00000107611")]
lungp$prob_active[which(row.names(lungp) == "ENSG00000107611")]
tprobs =cbind(lungp, liverp, kidneydatp)
tprobs[which(row.names(lungp) == "ENSG00000107611")]
tprobs[which(row.names(lungp) == "ENSG00000107611"),]
tprobs[which(row.names(lungp) == "ENSG00000108511"),]
tprobs[which(row.names(lungp) == "ENSG00000119715"),]
tprobs[which(row.names(lungp) == "ENSG00000184937"),]
tprobs[which(row.names(lungp) == "ENSG00000019505"),]
tprobs[which(row.names(lungp) == "ENSG000000151704"),]
tprobs[which(row.names(lungp) == "ENSG00000151704"),]
tprobs[which(row.names(lungp) == "ENSG00000180806"),]
tprobs[which(row.names(lungp) == "ENSG00000198729"),]
tprobs[which(row.names(lungp) == "ENSG00000100253"),]
tprobs[which(row.names(lungp) == "ENSG00000177990"),]
tprobs[(which(dp  >0.95)),]
tprobs[(which(dp  < -0.95)),]
tprobs[which(row.names(lungp) == "ENSG000000188176"),]
tprobs[which(row.names(lungp) == "ENSG00000188176"),]
tprobs[which(row.names(lungp) == "ENSG00000035720"),]
tprobs[which(row.names(lungp) == "ENSG00000133116"),]
tprobs[which(row.names(lungp) == "ENSG00000006747"),]
tprobs[which(row.names(lungp) == "ENSG00000153292"),]
tprobs[which(row.names(lungp) == "ENSG00000122592"),]
tprobs[which(row.names(lungp) == "ENSG00000150201"),]
for(i in which(dp  < -0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:8){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue")}}
tprobs[which(row.names(lungp) == "ENSG00000106327"),]
tprobs[which(row.names(lungp) == "ENSG00000021461"),]
tprobs[which(row.names(lungp) == "ENSG00000080618"),]
tprobs[which(row.names(lungp) == "ENSG00000234906"),]
tprobs[which(row.names(lungp) == "ENSG00000197977"),]
tprobs[which(row.names(lungp) == "ENSG00000136881"),]
tprobs[which(row.names(lungp) == "ENSG00000084110"),]
for(i in which(dp  < -0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
tprobs[which(row.names(lungp) == "ENSG000000197272"),]
tprobs[which(row.names(lungp) == "ENSG00000197272"),]
tprobs[which(row.names(lungp) == "ENSG00000173406"),]
boxplot(list(kidneydat[which(row.names(lungp) == "ENSG00000173406"),], lungdat[which(row.names(lungp) == "ENSG00000173406"),], livdat[which(row.names(lungp) == "ENSG00000173406"),]))
(list(kidneydat[which(row.names(lungp) == "ENSG00000173406"),], lungdat[which(row.names(lungp) == "ENSG00000173406"),], livdat[which(row.names(lungp) == "ENSG00000173406"),]))
boxplot(cbind(kidneydat[which(row.names(lungp) == "ENSG00000173406"),], lungdat[which(row.names(lungp) == "ENSG00000173406"),], livdat[which(row.names(lungp) == "ENSG00000173406"),]))
for(i in which(dp  > 0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
dp = lungdat$prob_active - liverp$prob_active
for(i in which(dp  > 0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
lungdat$prob_active - liverp$prob_active
dp = lungp$prob_active - liverp$prob_active
for(i in which(dp  > 0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
for(i in which(dp  < -0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
library(zigzag)
boxplot(cbind(kidneydat[which(row.names(lungp) == "ENSG00000173406"),], lungdat[which(row.names(lungp) == "ENSG00000173406"),], livdat[which(row.names(lungp) == "ENSG00000162391"),]))
tprobs[which(row.names(lungp) == "ENSG00000101405"),]
tprobs[which(row.names(lungp) == "ENSG00000170608"),]
tprobs[which(row.names(lungp) == "ENSG00000173406"),]
runif(10, 2, 5)
tprobs[which(row.names(lungp) == "ENSG00000164107"),]
tprobs[which(row.names(lungp) == "ENSG00000187048"),]
dp = lungp$prob_active - liverp$prob_active
for(i in which(dp  < -0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
dp = lungp$prob_active - liverp$prob_active
for(i in which(dp > 0.95)){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
tprobs[which(row.names(lungp) == "ENSG00000105664"),]
tprobs[which(row.names(lungp) == "ENSG00000156076"),]
tprobs[which(row.names(lungp) == "ENSG00000105989"),]
tprobs[which(row.names(lungp) == "ENSG00000034971"),]
dp = which(lungp$prob_active > 0.95 & kidneydatp$prob_active > 0.95 & liverp$prob_active > 0.95)
for(i in dp){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
length(dp)
length(dp)
dp = which(lungp$prob_active < thresh & kidneydatp$prob_active < thresh & liverp$prob_active < thresh)
thresh = 0.05
dp = which(lungp$prob_active < thresh & kidneydatp$prob_active < thresh & liverp$prob_active < thresh)
length(dp)
for(i in dp){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
length(lungp$prob_active)
dp = which(lungp$prob_active > (1-thresh) & kidneydatp$prob_active > (1 - thresh) & liverp$prob_active < thresh)
length(dp)
dp
for(i in dp){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
dp = which(lungp$prob_active < (thresh) & kidneydatp$prob_active > (1 - thresh) & liverp$prob_active > (1-thresh))
length(dp)
dp = which(lungp$prob_active > (1-thresh) & kidneydatp$prob_active > (1 - thresh) & liverp$prob_active < (thresh))
length(dp)
dp = which(lungp$prob_active > (1-thresh) & kidneydatp$prob_active < (thresh) & liverp$prob_active < (thresh))
length(dp)
dp = which(lungp$prob_active< (thresh) & kidneydatp$prob_active > (1-thresh) & liverp$prob_active < (thresh))
length(dp)
dp = which(lungp$prob_active< (thresh) & kidneydatp$prob_active < (thresh) & liverp$prob_active > (1-thresh))
length(dp)
dp = which(lungp$prob_active< (thresh) & kidneydatp$prob_active < (thresh) & liverp$prob_active > (1-2*thresh))
length(dp)
dp = which(lungp$prob_active< (thresh) & kidneydatp$prob_active < (thresh) & liverp$prob_active > (1-4*thresh))
length(dp)
dp = which(lungp$prob_active< (thresh) & kidneydatp$prob_active > (1-thresh) & liverp$prob_active > (1-thresh))
length(dp)
dp = which(lungp$prob_active > (1-thresh) & kidneydatp$prob_active < (thresh) & liverp$prob_active > (1-thresh))
length(dp)
for(i in dp){
hist(as.numeric(kidneydat[i,]), breaks = 20, col = rgb(1,0,0,0.4), freq = F, xlim = c(-8,8), main = row.names(lungdat)[i]);
hist(as.numeric(livdat[i,]), breaks = 20, col = rgb(0,0,1,0.5), add = T, freq = F);
hist(as.numeric(lungdat[i,]), breaks = 20, col = rgb(0,1,0,0.5), add = T, freq = F);
for(j in 1:5){lines(density(kidneydat[,j]), col = "red"); lines(density(livdat[,j]), col = "blue"); lines(density(lungdat[,j]), col = "green")}}
5/100
0.05*150000
7500/60
125/60
?stopifnot
?stop
tester = function(x){
stopifnot(x > 10)
print(x)
}
tester(4)
tester(23)
debug(tester)
tester(23)
tester(23)
print(x)
x
tester(23)
undebug(tester)
tester(2)
tester(232)
debugonce(tester)
test(2)
tester(2)
tester(2)
browser()
n
c
where
Q
n
c
Quit
sq
library(zigzag)
mm <- zigzag$new(data = dat[1:8000,1:8], gene_length = gene_length_df[1:8000,1], candidate_gene_list = "random",
output_directory = "testing_3july2019", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
library(zigzag)
mm <- zigzag$new(data = dat[1:8000,1:8], gene_length = gene_length_df[1:8000,1], candidate_gene_list = "random",
output_directory = "testing_3july2019", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm <- zigzag$new(data = dat[1:8000,1:8], gene_length = gene_length_df[1:8000,1], candidate_gene_list = "random",
output_directory = "testing_3july2019", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
library(zigzag)
Yg
hist(Yg)
hist(Yg, breaks = 100)
plot(Yg, Xg[,1])
abline(0,1)
library(zigzag)
setBreakpoint(zizagMCMC.R, 23)
setBreakpoint(zigzagMCMC.R, 23)
setBreakpoint(mm$zigzagMCMC, 23)
setBreakpoint(mm$mcmc, 23)
setBreakpoint(mm$mcmc, 3)
setBreakpoint(test.R, 14)
setBreakpoint("zigzagMCMC.R", 23)
?tryCatch
library(zigzag)
xx = seq(-10,10,by=0.1)
qnorm(xx, 2, 2)
pnorm(xx, 2, 2)
Fxx = pnorm(xx, 2, 2)
yy = 0.1 * xx^2
plot(xx, Fxx, type = "l")
plot(yy, Fyy, type = "l")
plot(yy, Fxx, type = "l")
plot(xx,yy)
getwd()
dat <- read.table("../../../nmix_data_files/gtex_data/Skeletal_RNA.tpm", header=TRUE, sep="\t",
row.names=1, stringsAsFactors = F, numerals="warn.loss", fill = T)
gene_length_df = read.table("../../../nmix_data_files/gtex_data/protCoding_GTEx_hg19_meanLength.txt", row.names = 1, header = FALSE)
dat <- log(dat)
sublibdat <- dat[,sample(seq(ncol(dat)), 2, replace = F)]
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[1:8000,1:8], gene_length = gene_length_df[1:8000,1], candidate_gene_list = "random",
output_directory = "testing_3july2019", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=4000, append = F)
sample(seq(ncol(dat))
dat <- read.table("../../../nmix_data_files/gtex_data/Skeletal_RNA.tpm", header=TRUE, sep="\t",
row.names=1, stringsAsFactors = F, numerals="warn.loss", fill = T)
gene_length_df = read.table("../../../nmix_data_files/gtex_data/protCoding_GTEx_hg19_meanLength.txt", row.names = 1, header = FALSE)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[1:8000,1:8], gene_length = gene_length_df[1:8000,1], candidate_gene_list = "random",
output_directory = "testing_3july2019", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=4000, append = F)
mm$mcmc(sample_frequency = 20, progress_plot = F, write_to_files = T, ngen=12000, append = F,
run_posterior_predictive = T, mcmcprefix = "skeletal")
layout(1)
hist(dat[,1])
hist(log(dat[,1]), breaks = 100)
hist(log(dat[,2]), breaks = 100)
hist(log(dat[,3]), breaks = 100)
hist(log(dat[,4]), breaks = 100)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[1:8000,1:8], gene_length = gene_length_df[1:8000,1], candidate_gene_list = "random",
output_directory = "testing_3july2019", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=4000, append = F)
mm$mcmc(sample_frequency = 20, progress_plot = F, write_to_files = T, ngen=12000, append = F,
run_posterior_predictive = T, mcmcprefix = "skeletal")
ls(pattern = "p")
kidneyp = kidneydatp
skeletalp = read.table("testing_3july2019/skeletal_mcmc_output/skeletal_probability_active.tab", header = T, row.names = 1)
allp = cbind(kidneyp, liverp, lungp, skeletalp)
head(allp)
colnames(allp = c("kidney", "liver", "lung", "skeletal"))
colnames(allp) = c("kidney", "liver", "lung", "skeletal")
head(allp)
which(allp[,4] > 0.095 & allp[,1] < 0.05, allp[,2] < 0.05 & allp[,3] < 0.05)
which(allp[,4] > 0.95 & allp[,1] < 0.05, allp[,2] < 0.05 & allp[,3] < 0.05)
row.names(allp(which(allp[,4] > 0.95 & allp[,1] < 0.05, allp[,2] < 0.05 & allp[,3] < 0.05)))
row.names(allp)[which(allp[,4] > 0.95 & allp[,1] < 0.05, allp[,2] < 0.05 & allp[,3] < 0.05))]
row.names(allp)[which(allp[,4] > 0.95 & allp[,1] < 0.05, allp[,2] < 0.05 & allp[,3] < 0.05)]
hist(dat[which(row.names(dat) == "ENSG00000107147"),])
hist(as.numeric(dat[which(row.names(dat) == "ENSG00000107147"),]))
hist(as.numeric(dat[which(row.names(dat) == "ENSG00000107147"),]),breaks = 100)
layout(1)
hist(as.numeric(dat[which(row.names(dat) == "ENSG00000107147"),]),breaks = 100)
abline(v=1, col = "red")
hist(log(as.numeric(dat[which(row.names(dat) == "ENSG00000107147"),])),breaks = 100)
dim(dat)
hist(as.numeric(dat[which(row.names(dat) == "ENSG00000104313"),]),breaks = 100)
hist(as.numeric(dat[which(row.names(dat) == "ENSG00000104313"),1:8]),breaks = 100)
hist(as.numeric(dat[which(row.names(dat) == "ENSG00000166317")]),breaks = 100)
hist(as.numeric(dat[which(row.names(dat) == "ENSG00000166317"),]),breaks = 100)
hist(as.numeric(dat[which(row.names(lungdat) == "ENSG00000166317"),]),breaks = 100)
hist(as.numeric(lungdat[which(row.names(lungdat) == "ENSG00000166317"),]),breaks = 100)
hist(exp(as.numeric(lungdat[which(row.names(lungdat) == "ENSG00000166317"),])),breaks = 100)
abline(v=1, col  = "red")
hist(exp(as.numeric(lungdat[which(row.names(lungdat) == "ENSG00000166317"),1:8])),breaks = 100)
hist(exp(as.numeric(lungdat[which(row.names(lungdat) == "ENSG00000135902"),1:8])),breaks = 100)
hist(exp(as.numeric(lungdat[which(row.names(lungdat) == "ENSG00000135902"),])),breaks = 100)
hist(exp(as.numeric(liverdat[which(row.names(lungdat) == "ENSG00000135902"),])),breaks = 100)
hist(exp(as.numeric(liver[which(row.names(lungdat) == "ENSG00000135902"),])),breaks = 100)
hist(exp(as.numeric(livdat[which(row.names(lungdat) == "ENSG00000135902"),])),breaks = 100)
hist(exp(as.numeric(dat[which(row.names(lungdat) == "ENSG00000135902"),])),breaks = 100)
hist((as.numeric(dat[which(row.names(lungdat) == "ENSG00000135902"),])),breaks = 100)
abline(v=1, col = "red")
> row.names(allp)[which(allp[,4] > 0.95 & allp[,1] < 0.05, allp[,2] < 0.05 & allp[,3] < 0.05)]
row.names(allp)[which(allp[,4] > 0.95 & allp[,1] < 0.05, allp[,2] < 0.05 & allp[,3] < 0.05)]
hist((as.numeric(dat[which(row.names(lungdat) == "ENSG00000114948"),])),breaks = 100)
allp[which(row.names(lungdat) == "ENSG00000114948"),4]
allp[which(row.names(lungdat) == "ENSG00000114948"),]
row.names(allp)[which(allp[,4] > 0.95 & allp[,1] < 0.05 & allp[,2] < 0.05 & allp[,3] < 0.05)]
row.names(allp)[which(allp[,4] > 0.9 & allp[,1] < 0.05 & allp[,2] < 0.05 & allp[,3] < 0.05)]
row.names(allp)[which(allp[,4] > 0.8 & allp[,1] < 0.05 & allp[,2] < 0.05 & allp[,3] < 0.05)]
allp[which(row.names(lungdat) == "ENSG00000168779"),]
row.names(allp)[which(allp[,4] > 0.5 & allp[,1] < 0.05 & allp[,2] < 0.05 & allp[,3] < 0.05)]
row.names(allp)[which(allp[,4] > 0.9 & allp[,1] < 0.1 & allp[,2] < 0.1 & allp[,3] < 0.1)]
hist(exp(as.numeric(lungdat[which(row.names(lungdat) == "ENSG00000005102"),])),breaks = 100)
abline(v= 1, col = "red")
hist((as.numeric(lungdat[which(row.names(lungdat) == "ENSG00000005102"),])),breaks = 100)
allp[which(row.names(lungdat) == "ENSG00000005102"),]
row.names(allp)[which(allp[,4] > 0.95 & allp[,1] < 0.1 & allp[,2] < 0.1 & allp[,3] < 0.1)]
row.names(allp)[which(allp[,4] < 0.1 & allp[,1]  > 0.95 & allp[,2]  > 0.95 & allp[,3]  > 0.95)]
row.names(allp)[which(allp[,4] < 0.01 & allp[,1]  > 0.95 & allp[,2]  > 0.95 & allp[,3]  > 0.95)]
row.names(allp)[which(allp[,4] < 0.05 & allp[,1]  > 0.95 & allp[,2]  > 0.95 & allp[,3]  > 0.95)]
row.names(allp)[which(allp[,4] < 0.1 & allp[,1] < 0.1 & allp[,2] < 0.1 & allp[,3] < 0.1)]
row.names(allp)[which(allp[,4] < 0.01 & allp[,1] < 0.01 & allp[,2] < 0.01 & allp[,3] < 0.01)]
head(allp)
plot(allp)
plot(allp, cex = 0.2, pch = 16, col = rgb(0,0,0,0.2))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
plot(pressure)
?curve
library(zigzag)
getwd()
setwd("..")
dat <- read.table("quick_start_guide/example_lung.tpm", header=TRUE, sep="\t",
row.names=1, stringsAsFactors = F, numerals="warn.loss", fill = T)
gene_length_df = read.table("quick_start_guide/example_gene_length.txt", row.names = 1, header = FALSE)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
head(gene_length_df)
gene_length_df = read.table("quick_start_guide/example_gene_length.txt", row.names = 1, header = TRUE)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =3,
inactive_variances_prior_max = 15, active_variances_prior_max = 15,
threshold_i = 0, threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
library(zigzag)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(0, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
library(zigzag)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(0, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
library(zigzag)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(0, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 20, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
mm$inactive_variances_prior_log_max
mm$inactive_variances_prior_log_max - mm$inactive_variances_prior_log_min
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =1,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =1,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =1,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =3,
threshold_a = c(0, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =3,
threshold_a = c(1, 4, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(1, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(1, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = F, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "bobo")
log(0.0001)
log(0.001)
?install.packages
?zigzag
devtools::document()
?mcmc
?burnin
?zigzag
library(zigzag)
devtools::document()
?zigzag
library(zigzag)
160000/8
17000000/10000
1700/60
200000/11
200000/11/2
17000000/9090
1870/60
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(1, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=10000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
?burnin
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm1 <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output1", num_active_components =2,
threshold_a = c(1, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm1$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=10000, append = F, burninprefix = "burn1")
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm1 <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output1", num_active_components =2,
threshold_a = c(1, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm1$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=10000, append = F, burninprefix = "burn1")
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(1, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=10000, append = F)
dat <- read.table("quick_start_guide/example_lung.tpm", header=TRUE, row.names=1)
gene_length_df = read.table("quick_start_guide/example_gene_length.txt", row.names = 1, header = TRUE)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "quick_start_guide/example_zigzag_output", num_active_components =2,
threshold_a = c(1, 4), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 50, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=10000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "example_lung")
dev.list()
dev.off()
dev.off()
library(zigzag)
library(zigzag)
library("yaml", lib.loc="~/R/win-library/3.3")
remove.packages("yaml")
install.packages("yaml")
