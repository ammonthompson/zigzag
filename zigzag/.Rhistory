<<<<<<< HEAD
=======
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
library(zigzag)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
library(zigzag)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
library(zigzag)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
library(zigzag)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/subfile1_25libs_Lung_RNA.tpm", header=TRUE, row.names=1)
gene_length_df = read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/protCoding_GTEx_hg19_meanLength.txt", row.names = 1, header = FALSE)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=100000, append = F,
run_posterior_predictive = F, mcmcprefix = "sim85_t1")
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=100000, append = F,
run_posterior_predictive = T, mcmcprefix = "sim85_t1")
2081 - 85 - 150 - 50 - 25*12
10*12
microbenchmark::microbenchmark(c(rep(0,77), rep(1,23)))
bob seq(10)
bob = seq(10)
>>>>>>> 2f7bdd0c873d105e9561ea0e511c82e4c9202373
jim = bob
sam = bob
jim
sam
bob[2:5] = 234234
bob
sam
jim
?pandoc
erf(2)
install.packages("NORMT3")
library(NORMT3)
erf(1/(sqrt(2)))
erf(1/(sqrt(2))) * sqrt(pi/2)
3/sqrt(exp(1)) - erf(1/(sqrt(2))) * sqrt(pi/2)
1.5/2
605
605+321+119+428+28+20+128
c1 = c(11707,11295,11115,10616,8569,5943,5741)
c2 = c(12312,11616,11234,11044,8597,5963,5869)
sum(abs(c1 - c2))
c2 = c(1058609,1059009)
c1 = c(1057692,1058553)
sum(abs(c1 - c2))
1058609-1059009
1057692-1058553
c1 - c2
c2 - c1
c1 = c(127837,126478)
c2 = c(128624,127610)
sum(abs(c1 - c2))
3369+3011
6380/2
c1 = c(518979,519822,520028,521514,522011,523575,523825,524425,524647,524932,525278,526662
)
c2 = c(519198,519971,520063,521641,522069,523755,524046,524588,524877,525129,525391,526751
)
sum(abs(c1 - c2))
c1 = c(729950,726221,723972,723701,723484,723223,721794,720933,720617,720458,717832
)
c2 = c(730043,726788,724095,723884,723644,723420,723165,721739,720870,720556,719207
)
sum(abs(c1 - c2))
(1883+1843+1562)/3
c1 = c(39189,39592,41596)
c2 =c(39537,41123,41850
)
sum(abs(c1 - c2))
mean(c(5255,6794,5256,5251,5251,5251,5251,5251,5252,5252,5252,5252,5253,5253,5253,5253,5253,5253,3385
))
setwd("../../../testing_quickstart/zigzag/zigzag/quick_start_guide/")
install.packages("../../zigzag", type = "source", repos = NULL)
require(zigzag)
expression_data = read.table("example_lung.tpm", header = T, row.names = 1)
head(round(expression_data, digits = 1))
human_gene_lengths = read.table("example_gene_length.txt", header = T, row.names = 1)
head(round(human_gene_lengths, digits = 1))
plot(density(log(expression_data[,1])), main ="", xlab = "log Expression", ylim = c(0, 0.25))
for(i in seq(ncol(expression_data))) lines(density(log(expression_data[,i])))
abline(v = c(1, 4), lwd = c(2, 1), col = c("blue", "red"))
âˆ’
my_zigzag = zigzag$new(data = expression_data, gene_length = human_gene_lengths,
output_directory = "my_zigzag_output",
num_active_components = 2, threshold_a = c(1, 4))
my_zigzag$burnin(sample_frequency = 50, progress_plot = TRUE, write_to_files = TRUE, ngen=10000)
burn = read.table("example_zigzag_output/output_burnin/output_model_parameters.log", header = T, row.names for(i in seq(ncol(burn))) plot(burn[,i], type = "l", main = colnames(burn)[i])
burn = read.table("example_zigzag_output/output_burnin/output_model_parameters.log", header = T, row.names = 1)
for(i in seq(ncol(burn))) plot(burn[,i], type = "l", main = colnames(burn)[i])
plot(burn[,2], type = "l", main = colnames(burn)[2])
my_zigzag$mcmc(sample_frequency = 50, ngen = 50000, mcmcprefix = "human_lung")
mean(1130+4725+481+1463+901+921+884+829+903+925+770+773+665+702+746+1363)
mean(1130,4725,481,1463,901,921,884,829,903,925,770,773,665,702,746,1363)
mean(c(1130,4725,481,1463,901,921,884,829,903,925,770,773,665,702,746,1363))
mean(c(1763,720))
mean(c(2466,340,874))
mean(c(3803,3342,561,695,817,549))
sum(c(101,114,116,316))
post = read.table("example_zigzag_output/example_lung_mcmc_output/example_lung_model_parameters.log",
header = T, row.names = 1)
for(i in seq(ncol(post))) plot(post[,i], type = "l", main = colnames(post)[i])
hist(post$inactive_variance)
hist(post$inactive_variance, breaks = 20)
plot(post[,2], type = "l", main = colnames(post)[2])
Pr = read.table("example_zigzag_output/example_lung_mcmc_output/example_lung_probability_active.tab",
header = T, row.names = 1)
head(round(Pr, digits = 2))
library(zigzag)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/subfile1_25libs_Lung_RNA.tpm", header=TRUE, row.names=1)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/Amygdala_TruSeq.v1.tpm", header=TRUE, row.names=1)
dim(dat)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_RNA_Liver_RNASEQ.tpm", header=TRUE, row.names=1)
gene_length_df = read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_hg19_mean_length.txt", row.names = 1, header = FALSE)
dim(dat)
head(gene_length_df)
dim(gene_length_df)
hist(log(dat[,1]))
hist(log(dat[,1]), breaks = 100)
hist(log(dat[,2]), breaks = 100)
plot(density(log(dat[,1])))
for(i in 1:100) lines(density(log(dat[,i])))
dim(dat)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/Amygdala_TruSeq.v1.tpm", header=TRUE, row.names=1)
plot(density(log(dat[,1])))
lines(density(log(dat[,1])), col  = "red")
bob = density(log(dat[,1]))
lines(bob$x, 0.2 8 bob$y, col = "red")
lines(bob$x, 0.2 * bob$y, col = "red")
lines(bob$x, 0.5 * bob$y, col = "red")
bob = density(log(dat[,2]))
lines(bob$x, 0.5 * bob$y, col = "red")
bob = density(log(dat[,3]))
lines(bob$x, 0.5 * bob$y, col = "red")
bob = density(log(dat[,34]))
lines(bob$x, 0.5 * bob$y, col = "red")
bob = density(log(dat[,45]))
lines(bob$x, 0.5 * bob$y, col = "red")
bob = density(log(dat[,46]))
lines(bob$x, 0.5 * bob$y, col = "red")
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_Liver_RNASEQ.tpm", header=TRUE, row.names=1)
gene_length_df = read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_hg19_mean_length.txt", row.names = 1, header = FALSE)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
dim(gene_length_df)
dim(dat)
head(gene_length_df)
head(dat)
dim(dat)
plot(density(dat[,1]))
layout(1)
plot(density(log(dat[,1])))
alldat = dat
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/lincRNA_hs_liver.tpm", header=TRUE, row.names=1)
lines(density(log(dat[,1])), col = "red")
plot(density(log(dat[,1])))
for(i in 1:50) lines(density(log(dat[,i])))
hist(log(dat[,1]))
hist(log(dat[,1]), breaks = 100)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[,1:4], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(-1), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[,1:4], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(-1, 1), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[,1:8], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =1,
threshold_a = c(-1, 1), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[,1:8], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_a = c(-1, 1), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "lincRNA")
layout(1)
mm$plotDensities()
pp =read.table("../testing/lincRNA_mcmc_output/lincRNA_probability_active.tab", header  = T, row.names = 1)
plot(mm$Yg, pp)
plot(mm$Yg, pp$prob_active)
hist(pp$prob_active)
hist(pp$prob_active, breaks = 100)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[,1:8], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =1,
threshold_a = c(-1, 1), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[,1:8], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =1,
threshold_i = -1, threshold_a = c(-2, 1), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "lincRNA")
layout(1)
mm$plotDensities()
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat[,1:8], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(-2, 0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "lincRNA")
pp =read.table("../testing/lincRNA_mcmc_output/lincRNA_probability_active.tab", header  = T, row.names = 1)
plot(mm$Yg, pp$prob_active)
layout(1)
plot(mm$Yg, pp$prob_active)
mm$plotDensities()
hist(log(dat[,1]))
hist(log(dat[,1]),breaks = 1000)
hist(log(dat[,1]),breaks = 100)
dim(dat)
for(i in 1:10) hist(log(dat[i,]))
for(i in 1:10) hist(log(dat[i,] + 0.0001))
ndat = as.numeric(dat)
ndat = as.matrix(dat)
for(i in 1:10) hist(log(ndat[i,] + 0.0001))
for(i in which(pp$prob_active > 0.95)) hist(log(ndat[i,] + 0.0001))
for(i in which(pp$prob_active > 0.999)) hist(log(ndat[i,] + 0.0001))
hist(dat[,100], breaks = 100)
hist(log(dat[,100]), breaks = 100)
hist(log(dat[,120]), breaks = 100)
hist(log(dat[,121]), breaks = 100)
hist(log(rowMeans(dat)), breaks = 100)
plot(density(alldat[,1]))
plot(density(log(alldat[,1])))
lines(density(log(dat[,1])))
plot(density(log(alldat[,1])), ylim = c(0,0.1))
lines(density(log(dat[,1])))
for(i in 1:100) lines(density(log(dat[,i])), col = "red")
lines(density(log(alldat[,100])), lwd = 2)
dim(gene_length_df)
dim9dat
dim(dat)
dim(alldat)
sample(seq(ncol(alldat)), 10, replace = F)
sample(seq(ncol(alldat)), 10, replace = F)
abline(v=3)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = alldat[,sample(seq(ncol(alldat)), 10, replace = F)], gene_length = NULL, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(0,3), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = alldat[,sample(seq(ncol(alldat)), 10, replace = F)], gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(0,3), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
dim(gene_length_df)
cbind(row.names(dat), row.names(gene_length_df))
which(row.names(dat) == row.names(gene_length_df))
head(gene_length_df)
length(row.names(dat))
cbind(row.names(alldat), row.names(gene_length_df))
length(gene_length_df)
length(gene_length_df$V2)
length(alldat[,1])
head(alldat[,1])
head(alldat)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_liver_gtex.tpm", header=TRUE, row.names=1)
cbind(row.names(alldat), row.names(gene_length_df))
head(dat)
dim(alldat)
dim(gene_length_df)
head(gene_length_df)
tail(gene_length_df)
cbind(row.names(alldat), row.names(gene_length_df$V2))
cbind(row.names(alldat), row.names(gene_length_df))
cbind(row.names(alldat), row.names(gene_length_df)[-1])
tail(cbind(row.names(alldat), row.names(gene_length_df)[-1]))
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = alldat[,sample(seq(ncol(alldat)), 10, replace = F)], gene_length = gene_length_df$V2[-1], candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(0,3), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "allgenes")
layout(1)
mm$plotDensities()
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = alldat[,sample(seq(ncol(alldat)), 10, replace = F)], gene_length = gene_length_df$V2[-1], candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(0,3), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm <- zigzag$new(data = alldat[1:1000,sample(seq(ncol(alldat)), 10, replace = F)], gene_length = gene_length_df$V2[-1][1:1000], candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(0,3), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
?data
dim(dat)
dim gene_length_df
<<<<<<< HEAD
5700-4300
4309-4166
path = paste0(Sys.getenv("HOMEPATH"), "/Google\ Drive/POSTDOC/PostDoc_research/mixture_model/",
"DATA_ANALYSIS/gtex/lungs_rep_num_experiment")
setwd(path)
library(vioplot)
library(matrixStats)
#######################
### Read in Data ######
#######################
active_2libs = read.table("chromatin_state/active_chrome_lungs_2libs_probActive.tab", header = F, row.names = 1)
active_4libs = read.table("chromatin_state/active_chrome_lungs_4libs_probActive.tab", header = F, row.names = 1)
active_8libs = read.table("chromatin_state/active_chrome_lungs_8libs_probActive.tab", header = F, row.names = 1)
active_16libs = read.table("chromatin_state/active_chrome_lungs_16libs_probActive.tab", header = F, row.names = 1)
inactive_2libs = read.table("chromatin_state/inactive_chrome_lungs_2libs_probActive.tab", header = F, row.names = 1)
inactive_4libs = read.table("chromatin_state/inactive_chrome_lungs_4libs_probActive.tab", header = F, row.names = 1)
inactive_8libs = read.table("chromatin_state/inactive_chrome_lungs_8libs_probActive.tab", header = F, row.names = 1)
inactive_16libs = read.table("chromatin_state/inactive_chrome_lungs_16libs_probActive.tab", header = F, row.names = 1)
num_active = nrow(active_2libs)
num_inactive = nrow(inactive_2libs)
correct_2libs = (colSums(active_2libs) + colSums(1 - inactive_2libs))/(num_active + num_inactive)
correct_4libs = (colSums(active_4libs) + colSums(1 - inactive_4libs))/(num_active + num_inactive)
correct_8libs = (colSums(active_8libs) + colSums(1 - inactive_8libs))/(num_active + num_inactive)
correct_16libs = (colSums(active_16libs) + colSums(1 - inactive_16libs))/(num_active + num_inactive)
########################
### make boxplots ######
########################
layout(matrix(c(1,2),nrow=1))
boxplot(cbind(correct_2libs, correct_4libs, correct_8libs, correct_16libs), main = "accuracy",
names = c("2 libs", "4 libs", "8 libs", "16 libs"), lwd = 2)
prob_2libs = read.table("prob_active_files/lungs_2libs_probActive.tab", header = T, row.names = 1)
prob_4libs = read.table("prob_active_files/lungs_4libs_probActive.tab", header = T, row.names = 1)
prob_8libs = read.table("prob_active_files/lungs_8libs_probActive.tab", header = T, row.names = 1)
prob_16libs = read.table("prob_active_files/lungs_16libs_probActive.tab", header = T, row.names = 1)
boxplot(cbind(c(cor(prob_2libs))[-(11*seq(10)-10)], c(cor(prob_4libs))[-(11*seq(10)-10)],
c(cor(prob_8libs))[-(11*seq(10)-10)], c(cor(prob_16libs))[-(11*seq(10)-10)]),
names = c("2 libs", "4 libs", "8 libs", "16 libs"), ylim = c(0.91, 1), lwd = 2, main = "correlation between samples")
get_pairwise_99q = function(prob_file, quantile = 0.99, probdif = 0.5){
qq = c() #prob dif value at the quantile
mqq = c() #mean dif of the upper quantile
prop_greaterthan = c()
allabsdif = c() #all absolute pairwise difference
for(i in seq(ncol(prob_file)-1)){
for(j in (i + 1):ncol(prob_file)){
absdif = abs(prob_file[,i] - prob_file[,j])
qq = c(qq, as.numeric(quantile(absdif, probs = quantile)))
mqq = c(mqq, as.numeric(mean(absdif[absdif > qq[length(qq)]])))
prop_greaterthan = c(prop_greaterthan, sum(absdif < probdif)/length(absdif))
allabsdif = c(allabsdif, absdif)
}
}
return(list(qq, mqq, prop_greaterthan, allabsdif))
}
ngenes = nrow(prob_16libs)
quantile = 0.95
pdif_threshold = 0.05
quantile_2libs = get_pairwise_99q(prob_2libs, quantile, pdif_threshold)
quantile_4libs = get_pairwise_99q(prob_4libs, quantile, pdif_threshold)
quantile_8libs = get_pairwise_99q(prob_8libs, quantile, pdif_threshold)
quantile_16libs = get_pairwise_99q(prob_16libs, quantile, pdif_threshold)
m = 1
boxplot(cbind(quantile_2libs[[m]], quantile_4libs[[m]], quantile_8libs[[m]], quantile_16libs[[m]]),
main = paste0(quantile*100, "% of genes in pairwise difference is less than X"),
names = c(2, 4, 8, 16), ylim = c(0,0.5))
points(jitter(cbind(rep(1, 45),rep(2, 45),rep(3, 45),rep(4, 45)), factor = 0.5),
cbind(quantile_2libs[[m]], quantile_4libs[[m]], quantile_8libs[[m]], quantile_16libs[[m]]), pch = 16)
m = 3
vioplot(list(quantile_2libs[[m]], quantile_4libs[[m]], quantile_8libs[[m]], quantile_16libs[[m]]),
border = T, col = "light blue", main = paste0("proportion of genes with probability difference < ", pdif_threshold),
names = c(2, 4, 8, 16), at = seq(4) + 0, wex = 1, add =F)
points(jitter(cbind(rep(1, 45),rep(2, 45),rep(3, 45),rep(4, 45)), factor = 0.5),
cbind(quantile_2libs[[m]], quantile_4libs[[m]], quantile_8libs[[m]], quantile_16libs[[m]]), pch = 16)
layout(1)
boxplot(cbind(c(cor(prob_2libs))[-(11*seq(10)-10)], c(cor(prob_4libs))[-(11*seq(10)-10)],
c(cor(prob_8libs))[-(11*seq(10)-10)], c(cor(prob_16libs))[-(11*seq(10)-10)]),
names = c("2 libs", "4 libs", "8 libs", "16 libs"), ylim = c(0.91, 1), lwd = 2, main = "correlation between samples")
boxplot(cbind(correct_2libs, correct_4libs, correct_8libs, correct_16libs), main = "accuracy",
names = c("2 libs", "4 libs", "8 libs", "16 libs"), lwd = 2)
pdf(file = "accuracy_correlation_lung_boxplot.pdf", width = 8, height  = 8)
boxplot(cbind(correct_2libs, correct_4libs, correct_8libs, correct_16libs), main = "accuracy",
names = c("2 libs", "4 libs", "8 libs", "16 libs"), lwd = 2)
prob_2libs = read.table("prob_active_files/lungs_2libs_probActive.tab", header = T, row.names = 1)
prob_4libs = read.table("prob_active_files/lungs_4libs_probActive.tab", header = T, row.names = 1)
prob_8libs = read.table("prob_active_files/lungs_8libs_probActive.tab", header = T, row.names = 1)
prob_16libs = read.table("prob_active_files/lungs_16libs_probActive.tab", header = T, row.names = 1)
boxplot(cbind(c(cor(prob_2libs))[-(11*seq(10)-10)], c(cor(prob_4libs))[-(11*seq(10)-10)],
c(cor(prob_8libs))[-(11*seq(10)-10)], c(cor(prob_16libs))[-(11*seq(10)-10)]),
names = c("2 libs", "4 libs", "8 libs", "16 libs"), ylim = c(0.91, 1), lwd = 2, main = "correlation between samples")
dev.off()
layout(matrix(c(1,2),nrow=1))
pdf(file = "accuracy_correlation_lung_boxplot.pdf", width = 4, height  = 4)
boxplot(cbind(correct_2libs, correct_4libs, correct_8libs, correct_16libs), main = "accuracy",
names = c("2 libs", "4 libs", "8 libs", "16 libs"), lwd = 2)
prob_2libs = read.table("prob_active_files/lungs_2libs_probActive.tab", header = T, row.names = 1)
prob_4libs = read.table("prob_active_files/lungs_4libs_probActive.tab", header = T, row.names = 1)
prob_8libs = read.table("prob_active_files/lungs_8libs_probActive.tab", header = T, row.names = 1)
prob_16libs = read.table("prob_active_files/lungs_16libs_probActive.tab", header = T, row.names = 1)
boxplot(cbind(c(cor(prob_2libs))[-(11*seq(10)-10)], c(cor(prob_4libs))[-(11*seq(10)-10)],
c(cor(prob_8libs))[-(11*seq(10)-10)], c(cor(prob_16libs))[-(11*seq(10)-10)]),
names = c("2 libs", "4 libs", "8 libs", "16 libs"), ylim = c(0.91, 1), lwd = 2, main = "correlation between samples")
dev.off()
pdf(file = "accuracy_correlation_lung_boxplot.pdf", width = 6, height  = 6)
layout(matrix(c(1,2),nrow=1))
boxplot(cbind(correct_2libs, correct_4libs, correct_8libs, correct_16libs), main = "accuracy",
names = c("2 libs", "4 libs", "8 libs", "16 libs"), lwd = 2)
prob_2libs = read.table("prob_active_files/lungs_2libs_probActive.tab", header = T, row.names = 1)
prob_4libs = read.table("prob_active_files/lungs_4libs_probActive.tab", header = T, row.names = 1)
prob_8libs = read.table("prob_active_files/lungs_8libs_probActive.tab", header = T, row.names = 1)
prob_16libs = read.table("prob_active_files/lungs_16libs_probActive.tab", header = T, row.names = 1)
boxplot(cbind(c(cor(prob_2libs))[-(11*seq(10)-10)], c(cor(prob_4libs))[-(11*seq(10)-10)],
c(cor(prob_8libs))[-(11*seq(10)-10)], c(cor(prob_16libs))[-(11*seq(10)-10)]),
names = c("2 libs", "4 libs", "8 libs", "16 libs"), ylim = c(0.91, 1), lwd = 2, main = "correlation between samples")
dev.off()
pdf(file = "accuracy_correlation_lung_boxplot.pdf", width = 8, height  = 4)
layout(matrix(c(1,2),nrow=1))
boxplot(cbind(correct_2libs, correct_4libs, correct_8libs, correct_16libs), main = "accuracy",
names = c("2 libs", "4 libs", "8 libs", "16 libs"), lwd = 2)
prob_2libs = read.table("prob_active_files/lungs_2libs_probActive.tab", header = T, row.names = 1)
prob_4libs = read.table("prob_active_files/lungs_4libs_probActive.tab", header = T, row.names = 1)
prob_8libs = read.table("prob_active_files/lungs_8libs_probActive.tab", header = T, row.names = 1)
prob_16libs = read.table("prob_active_files/lungs_16libs_probActive.tab", header = T, row.names = 1)
boxplot(cbind(c(cor(prob_2libs))[-(11*seq(10)-10)], c(cor(prob_4libs))[-(11*seq(10)-10)],
c(cor(prob_8libs))[-(11*seq(10)-10)], c(cor(prob_16libs))[-(11*seq(10)-10)]),
names = c("2 libs", "4 libs", "8 libs", "16 libs"), ylim = c(0.91, 1), lwd = 2, main = "correlation between samples")
dev.off()
pdf(file = "accuracy_correlation_lung_boxplot.pdf", width = 8, height  = 4)
layout(matrix(c(1,2),nrow=1))
boxplot(cbind(correct_2libs, correct_4libs, correct_8libs, correct_16libs), main = "accuracy",
names = c("2 libs", "4 libs", "8 libs", "16 libs"), lwd = 2)
prob_2libs = read.table("prob_active_files/lungs_2libs_probActive.tab", header = T, row.names = 1)
prob_4libs = read.table("prob_active_files/lungs_4libs_probActive.tab", header = T, row.names = 1)
prob_8libs = read.table("prob_active_files/lungs_8libs_probActive.tab", header = T, row.names = 1)
prob_16libs = read.table("prob_active_files/lungs_16libs_probActive.tab", header = T, row.names = 1)
boxplot(cbind(c(cor(prob_2libs))[-(11*seq(10)-10)], c(cor(prob_4libs))[-(11*seq(10)-10)],
c(cor(prob_8libs))[-(11*seq(10)-10)], c(cor(prob_16libs))[-(11*seq(10)-10)]),
names = c("2 libs", "4 libs", "8 libs", "16 libs"), ylim = c(0.91, 1), lwd = 2, main = "correlation between samples")
dev.off()
path = paste0(Sys.getenv("HOMEPATH"), "/Google\ Drive/POSTDOC/PostDoc_research/mixture_model/",
"DATA_ANALYSIS/comparative_human_chimp_rhesus")
opar = par()
setwd(path)
library(pvclust)
library(matrixStats)
library(vioplot)
tissues = c("AMY", "DFC", "STC", "STR", "V1C", "VFC")
###################
### FUNCTIONS #####
###################
plot_column_densities = function(df, legend_labels, main_label){
max_density = max(sapply(seq(ncol(df)), function(cc) density(df[,cc])$y))
maxmean = max(colMeans(df))
minmean = min(colMeans(df))
range = c(min(df), max(df))
cf = c()
plot(NULL, xlim = range, ylim = c(0, max_density), main = main_label, xlab = "Wasserstein distance", ylab="density")
for(i in seq(ncol(df))){
color_factor = 1-(mean(df[,i])-minmean)/(maxmean - minmean)
lines(density(df[,i]), col = rgb(color_factor, 0,0))
cf = c(cf, color_factor)
}
print(cf)
legend(x = range[1] + 0.65 * diff(range), y = 0.9 * max_density, legend = legend_labels, fill = rgb(cf, 0,0), text.col = rgb(cf,0,0))
}
isInRange = function(x, myrange){
return(x >= myrange[1] & x < myrange[2])
}
####################################
###### prob active analysis  #######
####################################
### 1:1:1 orthologs
### transcriptome level analyses
orthoprob.list = list.files("prob_active_files/", pattern = "1_1_1_single")
singleton_probs.data = list()
for(i in seq(6))  singleton_probs.data[[i]] = read.table(paste0("prob_active_files/", orthoprob.list[[i]]), header = F, row.names =1)
### proportion of gene set conserved or transitioned
prob_conserved_active = sapply(seq(6), function(tt){return(rowProds(as.matrix(singleton_probs.data[[tt]])))})
prob_conserved_inactive = sapply(seq(6), function(tt){return(rowProds(as.matrix(1-singleton_probs.data[[tt]])))})
uncertain = sapply(seq(6), function(tt){return( 1 - rowProds(as.matrix(singleton_probs.data[[tt]])) -
(rowProds(as.matrix(1-singleton_probs.data[[tt]]))))})
prob_human_ontrans = sapply(seq(6), function(tt){singleton_probs.data[[tt]][,1] * (1-singleton_probs.data[[tt]][,2]) *
(1-singleton_probs.data[[tt]][,3])})
prob_human_offtrans = sapply(seq(6), function(tt){(1-singleton_probs.data[[tt]][,1]) * (singleton_probs.data[[tt]][,2]) *
(singleton_probs.data[[tt]][,3])})
prob_human_transition = prob_human_ontrans + prob_human_offtrans
active_inactive_percent = sapply(seq(6), function(x){return(c(sum(prob_conserved_active[,x] > 0.95), sum(isInRange(prob_conserved_active[,x], c(0.8, 0.95))),
sum(prob_conserved_inactive[,x] > 0.95),sum(isInRange(prob_conserved_inactive[,x], c(0.8, 0.95))),
sum(prob_human_transition[,x] > 0.95), sum(isInRange(prob_human_transition[,x], c(0.8, 0.95))))/
nrow(prob_conserved_active))})
### proportion of individual transcriptomes that are conserved among species
cat("expected number of genes that are active in all species as a proportion of the expected number active in human\n",
sapply(seq(6), function(tt){return(sum(rowProds(as.matrix(singleton_probs.data[[tt]])))/
sum(singleton_probs.data[[tt]][,1]))}), "\n")
cat("proportion of genes in human >0.95 prob have >0.95 prob in all species\n",
sapply(seq(6), function(tt){return(sum(rowMins(as.matrix(singleton_probs.data[[tt]])) > 0.95)/
sum(singleton_probs.data[[tt]][,1] > 0.95))}), "\n")
cat("expected conserved proportion of genes given in human >0.95 prob\n",
sapply(seq(6), function(tt){
return(sum(rowProds(as.matrix(singleton_probs.data[[tt]][which(singleton_probs.data[[tt]][,1] > 0.95),2:3])) > 0.95)/
sum(singleton_probs.data[[tt]][,1] > 0.95))}), "\n")
cat("  proportion of genes conserved on (> 0.95)\n",
sapply(seq(6), function(tt){
return(sum(rowMins(as.matrix(singleton_probs.data[[tt]])) > 0.95)/nrow(singleton_probs.data[[tt]]))}), "\n")
cat(" proportion of genes conserved off (< 0.05)\n",
sapply(seq(6), function(tt){
return(sum(rowMins(as.matrix(singleton_probs.data[[tt]])) < 0.05)/nrow(singleton_probs.data[[tt]]))}), "\n")
### probability correlations
sapply(seq(6), function(tt){
return(print(cor(singleton_probs.data[[tt]])))})
l1 = rnorm(10000,10,1)
l2 = rnorm(10000, l1,1)
plot(density(l1))
lines(density(l2))
l3 = rnorm(10000, l2,1)
lines(density(l3))
dim(dat)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_liver_gtex.tpm", header=TRUE, row.names=1)
gene_length_df = read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_hg19_mean_length.txt", row.names = 1, header = FALSE)
dat <- read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_liver_gtex.tpm", header=TRUE, row.names=1)
gene_length_df = read.table("../../../bitbucket_repos/nmix_data_files/gtex_data/allgenes_hg19_mean_length.txt", row.names = 1, header = FALSE)
library(zigzag)
getwd()
=======
library(zigzag)
dat <- read.table("../simulate_data/simulated_data/sim3_twoComps_2mu3_nactive2500.tsv", header=TRUE, row.names=1)
gene_length_df = read.table("../simulate_data/simulated_data/sim3_twoComps_2mu3_gene_length.tsv", row.names = 1, header = FALSE)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(0,3), active_gene_set = NULL, shared_active_variances = T, beta = 1)
hist(dat[,1])
layout(1)
hist(log(dat[,1]))
hist(log(dat[,1]), breaks = 100)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2,
threshold_i = -1, threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_mean_shape = 2,
threshold_i = -1, threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 2,
threshold_i = -1, threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 10,
threshold_i = -1, threshold_a = c(0), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
layout(1)
mm$plotDensities()
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 10,
threshold_i = -1, threshold_a = c(0,2.5), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 1,
threshold_i = -1, threshold_a = c(0,2.5), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 1,
threshold_i = -1, threshold_a = c(0,2.75), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "sim3")
layout(1)
hist(c(rnorm(0.15 * 2500, 3, 2), rnorm(0.85 * 2500, 2, 2)), breaks = 20)
hist(c(rnorm(0.15 * 2500, 3, 2), rnorm(0.85 * 2500, 2, 2)), breaks = 50)
hist(c(rnorm(0.15 * 2500, 4, 2), rnorm(0.85 * 2500, 2, 2)), breaks = 50)
hist(c(rnorm(0.15 * 2500, 6, 2), rnorm(0.85 * 2500, 2, 2)), breaks = 50)
hist(c(rnorm(0.5 * 2500, -2, 2), rnorm(0.5 * 2500, 2, 2)), breaks = 50)
hist(c(rnorm(0.15 * 2500, 3, sqrt(2)), rnorm(0.85 * 2500, 2, sqrt(2))), breaks = 50)
hist(c(rnorm(0.15 * 2500, 4, sqrt(2)), rnorm(0.85 * 2500, 2, sqrt(2))), breaks = 50)
hist(c(rnorm(0.2 * 2500, 3, sqrt(2)), rnorm(0.8 * 2500, 2, sqrt(2))), breaks = 50)
hist(c(rnorm(0.2 * 2500, 4, sqrt(2)), rnorm(0.8 * 2500, 2, sqrt(2))), breaks = 50)
hist(c(rnorm(0.2 * 2500, 6, sqrt(2)), rnorm(0.8 * 2500, 2, sqrt(2))), breaks = 50)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 1,
threshold_i = -1, threshold_a = c(0,3), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
plot(dat[,1])
plot(log(dat[,1]))
layout(1)
plot(log(dat[,1]))
abline(h=c(-2,2,3), col = "red")
abline(v=0.5 + 0.5*0.85)
abline(v=5000*(0.5 + 0.5*0.85))
plot(density(log(dat[3000:4000,1])))
lines(density(log(dat[4500:5000,1])))
abline(v=c(2,3))
lines(density(log(dat[4800:5000,1])))
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 1,
threshold_i = -1, threshold_a = c(1), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
sq=rbind(c(1,2),c(3,4)); layout(sq)
mm <- zigzag$new(data = dat, gene_length = gene_length_df, candidate_gene_list = "random",
output_directory = "../testing", num_active_components =2, active_means_dif_prior_shape = 1,
threshold_i = -1, threshold_a = c(1, 2.5), active_gene_set = NULL, shared_active_variances = T, beta = 1)
mm$burnin(sample_frequency = 20, burnin_target_acceptance_rate=0.44, progress_plot = T,
write_to_files = T, ngen=5000, append = F)
mm$mcmc(sample_frequency = 50, progress_plot = F, write_to_files = T, ngen=50000, append = F,
run_posterior_predictive = T, mcmcprefix = "sim3")
library(zigzag)
>>>>>>> 2f7bdd0c873d105e9561ea0e511c82e4c9202373
